// Arrays: Semicolons can be omitted if each value is places on a separate line

let names = [| "Rose"; "Martha"; "Donna"; "Amy"; "Clara" |]

// An array can be generated by enclosing a sequence expression between [| and |]
let lines = [| use r = new System.IO.StreamReader("ArnoldMovies.txt") 
               while not r.EndOfStream do yield r.ReadLine() |]

lines |> Seq.iter (printfn "%s")

// Empty arrays
let emptyArray = [| |]

// Depending on context a type annotation may be needed when creating an empty array
// to prevent the compiler from auto generalizing it
let emptyArray2 : int array = [| |]
let empryArray3 : int[] = [| |]
let emptyArray4 = Array.empty<string>


// Create an array with all elements initialized with default values
let stringArray = Array.zeroCreate<string> 5  // FYI THIS WILL DEFAULT TO NULL BE AWARE OF POSSIBLE NREs

// Initialize an array with Array.init
let stringArray2 = Array.init 5 (fun _ -> "")

// Accessing array elements
let name1 = names.[1]

// Updating array elements
names.[1] <- "Jenny"

// More functional approach to retrieving and updating array elements
let movies = [| "The Terminator"; "Predator"; "Commando"; |]

Array.set movies 1 "Batman & Robin"
Array.get movies 1 |> printfn "%s"

// Arrays support slice expressions
Array.iter (printfn "%s") lines.[1..3]

// Copy array
[| 1..10 |] |> Array.copy |> ignore


// Sorting Arrays
// sortInPlace
let r = System.Random()
let ints = Array.init 5 (fun _ -> r.Next(-100, 100))
ints |> Array.sortInPlace
Array.iter (printfn "%d") ints

let movies2 = [| ("the terminator", "1984")
                 ("predator", "1987")
                 ("commando", "1985")
                 ("total recall", "1990")
                 ("conan the destroyer", "1984") |]

// Sorting by year
// Easiest way to sort by year is to just project the year value via sortInPlaceBy
movies2 |> Array.sortInPlaceBy (fun (_, year) -> year)

// Directly compare two elements with sortInPlaceWith
movies2 |> Array.sortInPlaceWith (fun (_,y1) (_,y2) -> if y1 < y2 then -1
                                                       elif y1 > y2 then 2
                                                       else 0)


// Multidimensional Arrays
let movies3 = array2D [| [| "The Terminator"; "1984" |]
                         [| "Predator"; "1987" |]
                         [| "Commando"; "1985" |]
                         [| "The Running Man"; "1987" |]
                         [| "True Lies"; "1994" |]
                         [| "Last Action Hero"; "1993"|]
                         [| "Total Recall"; "1990" |]
                         [| "Conan the Barbarian"; "1982" |]
                         [| "Conan the Destroyer"; "1984" |] 
                         [| "Hercules in New York"; "1969"|] |]

printfn "%s" movies3.[2,1]

// Slice expressions to slice the movies array vertivally to create new arrays
// containing only the movie names or only the years

let movieNames = movies3.[0..,0..0]
let movieYears = movies3.[0..,1..1]

// Can also slice arrays horizontally
let moviesSubset = movies3.[1..3,0..]

// Jagged Arrays - pg 148
